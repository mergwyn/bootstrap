#!/usr/bin/env bash

# Script to initialise openwrt for nordvpn
set -o nounset
set -o pipefail
set -o errexit

here=$(dirname $0)

readonly openvpn=/etc/openvpn

getsecret() {
  eyaml decrypt -e /usr/src/control-repo/data/secrets.yaml |
    sed -n -e "/secrets::$1:/"'s/^.*PKCS7\[\(.*\)\]!/\1/p'
}

# Create a file for authentication
configure_nordvpn() {
  [[ -f ${here}/nord.auth ]] && rm -f ${here}/nord.auth
  {
    getsecret nordvpn::user
    getsecret nordvpn::password
  } > ${here}/nord.auth
  chmod 400 ${here}/nord.auth
  
}
configure_privatvpn() {
  [[ -f ${here}/privat.auth ]] && rm -f ${here}/privat.auth
  {
    getsecret privatvpn::user
    getsecret privatvpn::password
  } > ${here}/privat.auth 
  chmod 400 ${here}/privat.auth
}

create_container() {
  local password
  lxc init images:openwrt/19.07 "${guest}"

  lxc config device add "${guest}" eth1 nic name=eth1 nictype=bridged parent=lxdbr0

  if [[ -n ${IP} ]] ; then
    lxc file pull ${guest}/etc/config/network ${guest}_network
    sed -i -e "/^\(config interface \)'wan'/,+3d" ${guest}_network
    cat >> ${guest}_network <<!

config interface 'wan'
	option proto 'dhcp'
	option ifname 'eth1'
	option peerdns '0'
	list dns '8.8.8.8'
	list dns '8.8.4.4'
	option ipv6 'off'

config interface 'lan'
	option ifname 'eth0'
	option proto 'static'
	option netmask '255.255.255.0'
	option ip6assign '60'
	option ipaddr '192.168.11.252'
	list dns '192.168.11.21'
	list dns '192.168.11.22'
	option ipv6 'off'
!
    lxc file push ${guest}_network ${guest}/etc/config/network
    cat ${guest}_network
    rm ${guest}_network
  fi
  lxc start "${guest}"
  password=$(getsecret openwrt)
  printf '%s\n%s' "${password}" "${password}" | lxc exec "${guest}" -- passwd
}

install_packages() {
  local -a packages
  packages=(
    bash
    getopt
  )
  ${exec} opkg update
  ${exec} opkg install "${packages[@]}" 
}

Usage() {
  echo print usage
}

params="$(getopt -o h:,i: --long ip:,vpns:,help: --name "$0" -- "$@")"
eval set -- "$params"

while true ; do
  case "$1" in
    -i|--ip)    IP=$2
                guest_args+=("--ip=$2"); shift 2 ;;
    -h|--help)  Usage; exit 0 ;;
    --vpns)     guest_args+=("--vpns=$2")
                IFS=',' read -r -a vpns <<< "$2"
                shift 2 ;;
    --)         shift; break ;;
    *)          echo "Not implemented: $1" >&2;
                exit 1 ;;
  esac
done

[[ $# -lt 1 ]] && Usage

guests=("$@")

for guest in "${guests[@]}"; do
  exec="lxc exec ${guest} --"
  create_container
  sleep 5 # Allow guest time to get network up

  install_packages

# Assemble files needed
  ${exec} mkdir ${openvpn}
  for vpn in "${vpns[@]}" ; do
    case $vpn in
    nord)
      configure_nordvpn
      lxc file push ${here}/nord.auth ${guest}${openvpn}/
      lxc file push ${here}/nordvpnserver ${guest}/root/
      lxc file push ${here}/vpn-policy-routing.plex.user ${guest}/etc/
      ;;
    privat)
      configure_privatvpn
      lxc file push ${here}/update-resolv-conf ${guest}${openvpn}/
      lxc file push ${here}/privat.auth ${guest}${openvpn}/
      ;;
    esac
  done
  lxc file push ${here}/dnsleaktest ${guest}/root/
  lxc file push ${here}/bootstrap ${guest}/root/

# Finally run bootstrap
  ${exec} bash -x  /root/bootstrap "${guest_args[@]}"
  sleep 5

  lxc restart "${guest}"
done
